s_2 <- sqrt(zs2_2 + taus2_2)
b_2 <- zs2_2/(zs2_2 + taus2_2)
varphi_1 <- a4(thseq, 0, s_1, 0, b_1)
varphi_2 <- a4(thseq, 0, s_2, 0, b_2)
d <- varphi_2 - varphi_1
plot(thseq, d, type = "l", ylim = range(c(0, d)),
main = "Negative difference means that FC1 is better",
ylab = "Score difference", xlab = expression(theta))
abline(h = 0, lty = 2)
thseq <- seq(from = -10, to = 10, by = .01)
taus2_1 <- 1
zs2_1 <- 1
s_1 <- sqrt(zs2_1 + taus2_1)
b_1 <- zs2_1/(zs2_1 + taus2_1)
taus2_2 <- 2
zs2_2 <- .99
s_2 <- sqrt(zs2_2 + taus2_2)
b_2 <- zs2_2/(zs2_2 + taus2_2)
varphi_1 <- a4(thseq, 0, s_1, 0, b_1)
varphi_2 <- a4(thseq, 0, s_2, 0, b_2)
d <- varphi_2 - varphi_1
plot(thseq, d, type = "l", ylim = range(c(0, d)),
main = "Negative difference means that FC1 is better",
ylab = "Score difference", xlab = expression(theta))
abline(h = 0, lty = 2)
rm(list = ls())
load("~/Schreibtisch/Schwarzwald/Daten/20_ZÃ¤hlschranken/Kampagnendaten.Rdata")
df <- l$df
head(df)
unique(df$variable)
table(df$variable)
d <- df %>% filter(Kampagne %in% 2:3 & variable == "Personen_In")
library(dplyr)
d <- df %>% filter(Kampagne %in% 2:3 & variable == "Personen_In")
head(d)
getwd()
library(devtools)
load_all("Dokumente/fdtest")
m <- matrix(rnorm(10000), 100, 100)
permhelper(m, 1, 10)
permhelper(m, 2, 10)
permhelper(m, 3, 10)
permhelper(m, 32, 10)
load_all("Dokumente/fdtest")
library(devtools)
library(devtools)
load_all("Dokumente/fdtest")
library(devtools)
load_all("Dokumente/fdtest")
m <- matrix(rnorm(10000), 100, 100)
check <- permhelper(m, 3, 100)
check
f <- function(z) pnorm(z, left.tail = FALSE)
f(0)
f <- function(z) pnorm(z, lower.tail = FALSE)
integrate(f, 0, Inf)
str(integrate(f, 0, Inf))
mean(1, 2)
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
plot_d <- function(s_a = 2, s_b = 1, m_y = 0){
n <- 100
tr <- seq(from = m_y - max(c(s_a, s_b)),
to = m_y + max(c(s_a, s_b)),
length.out = n)
ret <- matrix(0, n, 2)
for (jj in 1:n){
ret[jj, 1] <- s_a*int_f((tr[jj]-m_y)/s_a)
ret[jj, 2] <- s_b*int_f((tr[jj]-m_y)/s_b)
}
plot(tr, ret[,1] - ret[,2])
abline(v = m_y)
}
plot_d
plot_d()
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
plot_d <- function(s_a = 2, s_b = 1, m_y = 0){
n <- 100
tr <- seq(from = m_y - max(c(s_a, s_b)),
to = m_y + max(c(s_a, s_b)),
length.out = n)
ret <- matrix(0, n, 2)
for (jj in 1:n){
ret[jj, 1] <- s_a*int_f((tr[jj]-m_y)/s_a)
ret[jj, 2] <- s_b*int_f((tr[jj]-m_y)/s_b)
}
plot(tr, ret[,1] - ret[,2], type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
abline(v = m_y)
}
plot_d()
plot_d(s_a = 1, s_b = 2)
plot_d()
int_f(0)
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
plot_d <- function(s_a = 2, s_b = 1, m_y = 0){
n <- 100
tr <- seq(from = m_y - 5*max(c(s_a, s_b)),
to = m_y + 5*max(c(s_a, s_b)),
length.out = n)
ret <- matrix(0, n, 2)
for (jj in 1:n){
ret[jj, 1] <- s_a*int_f((tr[jj]-m_y)/s_a)
ret[jj, 2] <- s_b*int_f((tr[jj]-m_y)/s_b)
}
plot(tr, ret[,1] - ret[,2], type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
abline(v = m_y)
}
plot_d()
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
plot_d <- function(s_a = 2, s_b = 1, m_y = 0){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b)),
to = m_y + 3*max(c(s_a, s_b)),
length.out = n)
ret <- matrix(0, n, 2)
for (jj in 1:n){
ret[jj, 1] <- s_a*int_f((tr[jj]-m_y)/s_a)
ret[jj, 2] <- s_b*int_f((tr[jj]-m_y)/s_b)
}
plot(tr, ret[,1] - ret[,2], type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
abline(v = m_y)
}
plot_d()
plot_d(s_a = 1, s_b = 2)
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
plot_d <- function(s_a = 2, s_b = 1, m_y = 0){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b)),
to = m_y + 3*max(c(s_a, s_b)),
length.out = n)
ret <- matrix(0, n, 2)
for (jj in 1:n){
ret[jj, 1] <- s_a*int_f((tr[jj]-m_y)/s_a)
ret[jj, 2] <- s_b*int_f((tr[jj]-m_y)/s_b)
}
plot(tr, ret[,1] - ret[,2], type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
abline(v = m_y)
}
plot_d()
3*4/12
3*4/5
(3*4)/5
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_a*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 2, ry_a = .5, s_b = 1, ry_b = .5,
m_y = 0, s_y = 5){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
ret <- matrix(0, n, 2)
for (jj in 1:n){
ret[jj, 1] <- varp(tr[jj], s_a, ry_a, m_y, s_y)
ret[jj, 2] <- varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, ret[,1] - ret[,2], type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
abline(v = m_y)
}
plot_d()
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_a*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 2, ry_a = .5, s_b = 1, ry_b = .5,
m_y = 0, s_y = 5){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
ret <- matrix(0, n, 2)
for (jj in 1:n){
ret[jj, 1] <- varp(tr[jj], s_a, ry_a, m_y, s_y)
ret[jj, 2] <- varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, ret[,1] - ret[,2], type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
}
plot_d()
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_a*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 2, ry_a = .5, s_b = 1, ry_b = .5,
m_y = 0, s_y = 5){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
ret <- matrix(0, n, 2)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_a*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 2, ry_a = .5, s_b = 1, ry_b = .5,
m_y = 0, s_y = 5){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
a
min(a)
max(a)
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_a*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 1, ry_a = 1/sqrt(2), s_b = 2, ry_b = 1/(sqrt(2)*s_b),
m_y = 0, s_y = sqrt(2)){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
min(a)
max(a)
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_y*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 1, ry_a = 1/sqrt(2), s_b = 2, ry_b = 1/(sqrt(2)*s_b),
m_y = 0, s_y = sqrt(2)){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
min(y)
min(a)
max(a)
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_y*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 1, ry_a = 1/sqrt(2), s_b = 20,
ry_b = 1/(sqrt(2)*s_b),
m_y = 0, s_y = sqrt(2)){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_y*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 1, ry_a = 1/sqrt(2), s_b = 200,
ry_b = 1/(sqrt(2)*s_b),
m_y = 0, s_y = sqrt(2)){
n <- 100
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_y*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 1, ry_a = 1/sqrt(2), s_b = 200,
ry_b = 1/(sqrt(2)*s_b),
m_y = 0, s_y = sqrt(2)){
n <- 1000
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_y*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 1, ry_a = 1/sqrt(2), s_b = 2,
ry_b = 1/(sqrt(2)*s_b),
m_y = 0, s_y = sqrt(2)){
n <- 1000
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
plot_d(ry_b = .9)
plot_d(ry_b = .99)
plot_d(ry_b = .9999999999999999)
plot_d()
plot_d(ry_b = 0)
plot_d(ry_b = .9)
plot_d(ry_b = .9)
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_y*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 3, ry_a = 1/sqrt(2), s_b = 2,
ry_b = 1/(sqrt(2)*s_b),
m_y = 0, s_y = sqrt(2)){
n <- 1000
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_y*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 3, ry_a = 1/(sqrt(2)*s_a), s_b = 2,
ry_b = 1/(sqrt(2)*s_b),
m_y = 0, s_y = sqrt(2)){
n <- 1000
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
s_a <- 3
1/(sqrt(2)*s_a)
2/(sqrt(2)*s_a)
plot_d(s_a = 1.99999)
int_f(3)
int_f(2)
f <- function(z) pnorm(z, lower.tail = FALSE)
int_f <- function(theta){
integrate(f, theta, Inf)$value
}
varp <- function(theta, s_a, ry_a, m_y, s_y){
(s_y*ry_a*int_f((theta-m_y)/s_a) +
(1-ry_a*s_y/s_a)*(m_y-theta)*pnorm((theta-m_y)/s_a, lower.tail = FALSE))
}
plot_d <- function(s_a = 1, ry_a = .5, s_b = 2,
ry_b = .5,
m_y = 0, s_y = sqrt(2)){
n <- 1000
tr <- seq(from = m_y - 3*max(c(s_a, s_b, s_y)),
to = m_y + 3*max(c(s_a, s_b, s_y)),
length.out = n)
d <- rep(0, n)
for (jj in 1:n){
d[jj] <- varp(tr[jj], s_a, ry_a, m_y, s_y) -
varp(tr[jj], s_b, ry_b, m_y, s_y)
}
plot(tr, d, type = "l", bty = "n",
ylab = "Difference", xlab = expression(theta))
return(d)
}
a <- plot_d()
pnorm(1/2, lower.tail = FALSE)
pnorm(1/6, lower.tail = FALSE)
pnorm(1/66, lower.tail = FALSE)
quit()
ls
setwd("Dokumente/bvarsv")
library(devtools)
check()
check()
roxygen2::roxygenize()
library(compiler)
roxygen2::roxygenize()
check()
